[tox]
envlist = analysis, py3-test, py27-test
minversion = 2.5.0

[travis]
python =
  2.7: py27
  3.6: py3, analysis, docs

[package]
name = netconf_client

[cov]
xml = --cov-report xml:{toxworkdir}/{envname}coverage.xml
term = --cov-report term-missing
html = --cov-report html:{toxworkdir}/{envname}cov
branch = --cov-branch
directory =--cov {envsitepackagesdir}/{[package]name}
coverage = {[cov]xml} {[cov]term} {[cov]html} {[cov]branch} {[cov]directory}
cov_fail_under=100

[pylama]
format = pylint
skip = */.tox/*,*/.env/*
linters = pep8,pylint
ignore = C0111, R0201, W0703, I1101, W0511, W0622, R1705, W0621, R0913, C0330, C0103, W0613, R0903, C0301, R0902, R0205, W0612, W0107
analysis = pylama {[package]name} test

[pylama:pep8]
max_line_length=999
ignore = E203, W503

[pytest]
flags =-vvl
cov-fail-under=100
unit_results =--junitxml={toxworkdir}/{envname}_results.xml
test = py.test {[pytest]flags} {[pytest]unit_results}
with_metrics = {[pytest]test} {[cov]coverage}

[testenv:analysis]
commands =
    {[pylama]analysis}
    black --check .
deps =
   -r{toxinidir}/test-requirements.txt
   black

[testenv:docs]
deps = sphinx
commands = sphinx-build -b html docs docs_out

[testenv]
basepython =
    py27: python2.7
    py3: python3
    analysis: python3
    docs: python3
envdir =
    py27: {toxworkdir}/.py27
    py3: {toxworkdir}/.py3
    analysis: {toxworkdir}/.analysis
    docs: {toxworkdir}/.docs
setenv =
  COVERAGE_FILE = {envdir}/.coverage
commands =
    py3-test: {[pytest]with_metrics} test
    py3-no-coverage: {[pytest]test} test
    py3-unit: {[pytest]with_metrics} test/unit
    py3-component: {[pytest]with_metrics} test/component
    py3-adhoc: {posargs: bash -c 'echo must provide posargs with "tox args -- posargs"'}
    py27-test: {[pytest]with_metrics} test
    py27-no-coverage: {[pytest]test} test
    py27-unit: {[pytest]with_metrics} test/unit
    py27-component: {[pytest]with_metrics} test/component
    py27-adhoc: {posargs: bash -c 'echo must provide posargs with "tox args -- posargs"'}

deps =
   -r{toxinidir}/requirements.txt
   -r{toxinidir}/test-requirements.txt
